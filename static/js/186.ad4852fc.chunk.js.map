{"version":3,"file":"static/js/186.ad4852fc.chunk.js","mappings":"qLAyBA,UAtBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OAAuCN,EAAvC,4EAAyHO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IAAgBF,MAAK,SAAAC,GAAG,OAAIJ,EAAeI,EAAIE,QAAvB,GAC/J,GAAE,CAACV,IAECG,EAIHA,EAAYQ,OAAS,GAAK,wBACvBR,EAAYS,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACf,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADM,OAKV,+DATF,IAWV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState(null);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8fd7ea3a669b814effbf3238ac2d6fc5&language=en-US&page=1`).then(res => res.json()).then(res => setReviewsInfo(res.results));\n  }, [movieId]);\n\n  if (!reviewsInfo) {\n    return null;\n  }\n  return (\n    reviewsInfo.length > 0 ? (<ul>\n      {reviewsInfo.map(({ author, content }, idx) => (\n        <li key={idx}>\n          <p>{author}</p>\n          <p>{content}</p>\n        </li>))}\n    </ul>) : <p>There is no reviews for this Film:(</p>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviewsInfo","setReviewsInfo","useEffect","fetch","then","res","json","results","length","map","idx","author","content"],"sourceRoot":""}